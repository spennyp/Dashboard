{"version":3,"sources":["components/weather.js","components/clock.js","components/calendarPreview.js","components/greeting.js","components/gasTracker.js","components/searchBar.js","components/myLogo.js","app.js","theme.js","index.js"],"names":["WEATHER_IMG","default","weatherImgBase","thunderstorm","drizzle","rain","snow","clouds","clearnight","clearday","hazy","StyledWeather","styled","div","WeatherTop","WeatherIcon","img","WeatherTemp","WeatherBottom","Weather","props","state","temp","city","imgPath","lat","this","long","weatherImg","url","fetch","then","response","json","data","main","name","sys","weather","weatherType","toLowerCase","sunrise","sunset","now","Date","setState","toFixed","catch","error","console","log","hidden","className","src","React","Component","StyledClock","theme","smallScreen","Clock","datetime","getTime","bind","timerID","setInterval","tick","clearInterval","time","toLocaleTimeString","hour","minute","replace","StyledDate","Month","Day","CalendarPreview","month","day","getDate","getMonth","GreetingStyle","Greeting","timeOfDay","getHours","StyledGasTracker","a","primaryWhite","Title","Content","Value","Unit","GasTracker","value","stdGwei","standard","href","StyledSearchBar","SearchForm","form","startSearch","SearchText","input","SearchButton","button","SearchBar","search","handleChange","handleSubmit","event","target","window","location","preventDefault","onSubmit","id","type","onChange","onClick","process","alt","StyledMyLogo","MyLogo","outsidePadding","Dashboard","imgUrl","Top","Right","Bottom","Spacer","App","regular","document","body","style","backgroundColor","darkMode","color","mediumScreen","Theme","children","GlobalStyle","createGlobalStyle","getUrlParam","paramName","urlVars","substring","split","i","length","ReactDOM","render","getElementById"],"mappings":"wPAKMA,EAAc,CACnBC,QAASC,sBACTC,aAAcD,2BACdE,QAASF,sBACTG,KAAMH,mBACNI,KAAMJ,mBACNK,OAAQL,qBACRM,WAAYN,yBACZO,SAAUP,uBACVQ,KAAMR,oBAKDS,EAAgBC,IAAOC,IAAV,4FAMbC,EAAaF,IAAOC,IAAV,4CAIVE,EAAcH,IAAOI,IAAV,6EAMXC,EAAcL,IAAOC,IAAV,uGAOXK,EAAgBN,IAAOC,IAAV,uFA8EJM,E,kDArEd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZC,KAAM,KACNC,KAAM,KACNC,QAAS,MALQ,E,qDASnB,WAAqB,IAAD,OAEbC,EAAMC,KAAKN,MAAMK,IACjBE,EAAOD,KAAKN,MAAMO,KAClBC,EAAa5B,EAEf6B,EAAG,8DAA0DJ,EAA1D,gBAAqEE,EAArE,kBALQ,mCAKR,iBAEPG,MAAMD,GACJE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAS,IACPC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,IAAKC,EAAWJ,EAAXI,QACxB,GAAIA,EAAJ,CACA,IAAIC,EAAcD,EAAQ,GAAR,KAAmBE,cAChCC,EAAmBJ,EAAnBI,QAASC,EAAUL,EAAVK,OACVC,EAAM,IAAIC,KAGM,UAAhBL,IAEFA,EADGI,EAAMF,GAAWE,EAAMD,EACZ,WAEA,cAKhB,IAAIlB,EAAUI,EAAWlB,KACrB6B,KAAeX,IAClBJ,EAAUI,EAAWW,IAItB,EAAKM,SAAS,CACbvB,KAAMa,EAAKb,KAAKwB,QAAQ,GACxBtB,QAASA,EACTD,KAAMa,QAGPW,OAAM,SAACC,GACPC,QAAQC,IAAIF,Q,oBAIf,WACC,IAAMG,EAASzB,KAAKL,MAAMC,KAAO,GAAK,SACtC,OACC,eAACX,EAAD,CAAeyC,UAAWD,EAA1B,UACC,eAACrC,EAAD,WACC,cAACC,EAAD,CAAasC,IAAK3B,KAAKL,MAAMG,UAC7B,eAACP,EAAD,CAAamC,UAAU,kBAAvB,UAA0C1B,KAAKL,MAAMC,KAArD,aAED,cAACJ,EAAD,UACEQ,KAAKL,MAAME,c,GA/DK+B,IAAMC,W,OC/CtBC,EAAc5C,IAAOC,IAAV,gKAKgB,SAAAO,GAAK,OAAIA,EAAMqC,MAAMC,eAiDvCC,E,kDA3Cd,WAAYvC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZuC,SAAU,IAAIhB,MAGf,EAAKiB,QAAU,EAAKA,QAAQC,KAAb,gBANG,E,qDASnB,WAAqB,IAAD,OACnBpC,KAAKqC,QAAUC,aAAY,kBAAM,EAAKC,SAAQ,O,kCAG/C,WACCC,cAAcxC,KAAKqC,W,kBAGpB,WACCrC,KAAKmB,SAAS,CACbe,SAAU,IAAIhB,S,qBAIhB,SAAQgB,GACP,IAIIO,EAAOzC,KAAKL,MAAMuC,SAASQ,mBAAmB,QAJ9B,CACnBC,KAAM,UACNC,OAAQ,YAIT,OADAH,EAAOA,EAAKI,QAAQ,KAAK,IAAIA,QAAQ,KAAK,M,oBAI3C,WACC,IAAMJ,EAAOzC,KAAKmC,QAAQnC,KAAKL,MAAMuC,UACrC,OACC,cAACJ,EAAD,UACEW,Q,GAtCeb,IAAMC,WCTpBiB,EAAa5D,IAAOC,IAAV,0KAUV4D,EAAQ7D,IAAOC,IAAV,uEAKL6D,EAAM9D,IAAOC,IAAV,uEAsCM8D,E,kDA/Bd,WAAYvD,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZuD,MAAO,KACPC,IAAK,MAJY,E,qDAQnB,WACC,IAAMjB,EAAW,IAAIhB,KACfiC,EAAMjB,EAASkB,UAGfF,EADS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAD1EhB,EAASmB,YAG5BrD,KAAKmB,SAAS,CACb+B,MAAOA,EACPC,IAAKA,M,oBAIP,WACC,OACC,eAACL,EAAD,WACC,cAACC,EAAD,UAAQ/C,KAAKL,MAAMuD,QACnB,cAACF,EAAD,UAAMhD,KAAKL,MAAMwD,a,GAzBSvB,IAAMC,WCtB9ByB,GAAgBpE,IAAOC,IAAV,8JAKc,SAAAO,GAAK,OAAIA,EAAMqC,MAAMC,eAsCvCuB,G,kDA/Bd,WAAY7D,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZ6D,UAAW,MAHM,E,qDAOnB,WACC,IACMb,GADW,IAAIzB,MACCuC,WAClBD,EAAY,UACZb,GAAQ,GAAKA,EAAO,GACvBa,EAAY,UACFb,GAAQ,IAAMA,GAAQ,KAChCa,EAAY,aAGbxD,KAAKmB,SAAS,CACbqC,UAAWA,M,oBAIb,WACC,OACC,eAACF,GAAD,mBACOtD,KAAKL,MAAM6D,UAAWxD,KAAKN,MAAMgB,KAAO,KAAOV,KAAKN,MAAMgB,KAAO,GADxE,W,GAzBoBkB,IAAMC,WCVvB6B,GAAmBxE,IAAOyE,EAAV,0MAOZ,SAAAjE,GAAK,OAAIA,EAAMqC,MAAM6B,gBAIzBC,GAAQ3E,IAAOC,IAAV,mIAQL2E,GAAU5E,IAAOC,IAAV,mFAMP4E,GAAQ7E,IAAOC,IAAV,wIAQL6E,GAAO9E,IAAOC,IAAV,uJA8CK8E,G,kDApCd,WAAYvE,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZuE,MAAO,MAHU,E,qDAOnB,WAAqB,IAAD,OAEnB9D,MADY,gEAEVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACL,IAAM2D,GAAW3D,EAAKA,KAAK4D,SAAV,SAAqB,IAAM,IAAIhD,QAAQ,GACxD,EAAKD,SAAS,CACb+C,MAAOC,OAGR9C,OAAM,SAACC,GACPC,QAAQC,IAAIF,Q,oBAIf,WACC,IAAMG,EAASzB,KAAKL,MAAMuE,MAAQ,GAAK,SACvC,OACC,eAACR,GAAD,CAAkBW,KAAK,0BAA0B3C,UAAWD,EAA5D,UACC,cAACoC,GAAD,sBACA,eAACC,GAAD,WACC,cAACC,GAAD,UAAQ/D,KAAKL,MAAMuE,QACnB,cAACF,GAAD,6B,GA9BoBpC,IAAMC,WC1CzByC,GAAkBpF,IAAOC,IAAV,oFAMfoF,GAAarF,IAAOsF,KAAV,iOAGK,SAAA9E,GAAK,OAAIA,EAAMqC,MAAM6B,gBAG9B,SAAAlE,GAAK,OAAIA,EAAM+E,YAAc,EAAI,MAGZ,SAAA/E,GAAK,OAAIA,EAAMqC,MAAMC,eAKhD0C,GAAaxF,IAAOyF,MAAV,6UAeiB,SAAAjF,GAAK,OAAIA,EAAMqC,MAAMC,eAKhD4C,GAAe1F,IAAO2F,OAAV,yNAqDHC,G,kDAtCd,WAAYpF,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZoF,OAAQ,IAGT,EAAKC,aAAe,EAAKA,aAAa5C,KAAlB,gBACpB,EAAK6C,aAAe,EAAKA,aAAa7C,KAAlB,gBAPF,E,qDAUnB,c,0BAIA,SAAa8C,GACZlF,KAAKmB,SAAS,CACb4D,OAAQG,EAAMC,OAAOjB,U,0BAIvB,SAAagB,GACZE,OAAOC,SAAShB,KAAO,gCAAkCrE,KAAKL,MAAMoF,OACpEG,EAAMI,mB,oBAGP,WACC,IAAMb,EAAoC,KAAtBzE,KAAKL,MAAMoF,OAC/B,OACC,cAACT,GAAD,UACC,eAACC,GAAD,CAAYgB,SAAUvF,KAAKiF,aAAcR,YAAaA,EAAtD,UACC,cAACC,GAAD,CAAYc,GAAG,YAAYC,KAAK,OAAOvB,MAAOlE,KAAKL,MAAMoF,OAAQW,SAAU1F,KAAKgF,eAChF,cAACJ,GAAD,CAAca,KAAK,SAASE,QAAS3F,KAAKiF,aAA1C,SAAwD,qBAAKtD,IAAG,UAAKiE,aAAL,mBAA8CC,IAAI,gB,GAhC/FjE,IAAMC,WCvDxBiE,GAAe5G,IAAOyE,EAAV,wSAOR,SAAAjE,GAAK,OAAIA,EAAMqC,MAAM6B,gBAOE,SAAAlE,GAAK,OAAIA,EAAMqC,MAAMC,eAavC+D,G,4JAPd,WACC,OACC,cAACD,GAAD,CAAczB,KAAK,gCAAnB,qB,GAHkBzC,IAAMC,WCZrBmE,GAAiB,OAEjBC,GAAY/G,IAAOC,IAAV,sLAGH6G,IACF,SAAAtG,GAAK,OAAIA,EAAMqC,MAAM6B,gBACV,SAAAlE,GAAK,OAAIA,EAAMwG,UAK9BC,GAAMjH,IAAOC,IAAV,oFAMHiH,GAAQlH,IAAOC,IAAV,qGAOLkH,GAASnH,IAAOC,IAAV,qIAGD6G,GAEaA,IAGlBM,GAASpH,IAAOC,IAAV,6CA6DGoH,G,kDAvDd,WAAY7G,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZuG,OAAQ,MAHS,E,qDAOnB,WAAqB,IAAD,OAMnB9F,MADU,oIAERC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACL,IAEML,EAAM,OAFCK,EAAI,KACVgG,QACwB,IAC/B,EAAKrF,SAAS,CACb+E,OAAQ/F,OAGTkB,OAAM,WACNE,QAAQC,IAAI,SACZiF,SAASC,KAAKC,MAAMC,gBAAkB,e,oBAKzC,WACC,OACC,eAACX,GAAD,CAAWC,OAAQlG,KAAKL,MAAMuG,OAA9B,UACC,eAACC,GAAD,WACC,cAAC,EAAD,IACA,cAACC,GAAD,UACC,cAAC,EAAD,CAASlG,WAAYF,KAAKN,MAAMQ,WAAYH,IAAKC,KAAKN,MAAMK,IAAKE,KAAMD,KAAKN,MAAMO,YAGpF,cAACqG,GAAD,IACA,cAAC,GAAD,IACA,cAACA,GAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,CAAU5F,KAAMV,KAAKN,MAAMgB,OAC3B,eAAC2F,GAAD,WACC,cAAC,GAAD,IACA,cAACD,GAAD,UACC,cAAC,GAAD,gB,GAhDYxE,IAAMC,WC7ClBE,GAAQ,SAAC8E,EAAUC,GAAX,MAAsB,CACnClD,aAAc,UAGdmD,aAAc,IACd/E,YAAa,MAIC,SAASgF,GAAT,GAA4B,IAAZC,EAAW,EAAXA,SAC9B,OAAO,cAAC,IAAD,CAAelF,MAAOA,GAAtB,SAA8BkF,IAG/B,IAAMC,GAAcC,YAAH,oUCAxB,SAASC,GAAYC,GAGjB,IAFA,IACIC,EADUlC,OAAOC,SAASN,OAAOwC,UAAU,GACzBC,MAAM,KACnBC,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,IAAK,CACrC,IAAI/G,EAAO4G,EAAQG,GAAGD,MAAM,KAC5B,GAAI9G,EAAK,KAAO2G,EACZ,OAAO3G,EAAK,IAjBxBiH,IAASC,OACR,mCACC,eAACZ,GAAD,WACC,cAACE,GAAD,IACA,cAAC,GAAD,CAAKjH,KAAMmH,GAAY,QAASrH,IAAKqH,GAAY,OAAQ1G,KAAM0G,GAAY,eAG7EX,SAASoB,eAAe,W","file":"static/js/main.ac263ce5.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\n// Data\nconst weatherImgBase = 'weather/'\nconst WEATHER_IMG = {\n\tdefault: weatherImgBase + 'default.svg',\n\tthunderstorm: weatherImgBase + 'thunderstorm.svg',\n\tdrizzle: weatherImgBase + 'drizzle.svg',\n\train: weatherImgBase + 'rain.svg',\n\tsnow: weatherImgBase + 'snow.svg',\n\tclouds: weatherImgBase + 'clouds.svg',\n\tclearnight: weatherImgBase + 'clearnight.svg',\n\tclearday: weatherImgBase + 'clearday.svg',\n\thazy: weatherImgBase + 'hazy.svg',\n};\n\n\n// Style\nconst StyledWeather = styled.div`\n\theight: 100%;\n\tdisplay: inline-block;\n\tfont-weight: 200;\n`;\n\nconst WeatherTop = styled.div`\n\theight: 70%;\n`;\n\nconst WeatherIcon = styled.img`\n\theight:100%;\n\theight: 100%;\n\tfloat: left;\n`;\n\nconst WeatherTemp = styled.div`\n\theight: 100%;\n\tfloat: right;\n\tfont-size: 35px;\n\tpadding-top: 8px;\n`;\n\nconst WeatherBottom = styled.div`\n\theight: 30%;\n\ttext-align: center;\n\tfont-size: 20px;\n`;\n\n\n// Component\nclass Weather extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttemp: null,\n\t\t\tcity: null,\n\t\t\timgPath: null \n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst apiKey = 'a68f7eba17ff810319e0698eb480852e'; // Shouldn't really be here\n\t\tconst lat = this.props.lat\n\t\tconst long = this.props.long\n\t\tconst weatherImg = WEATHER_IMG\n\t\t\n\t\tvar url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${apiKey}&units=metric`;\n\n\t\tfetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconst {main, name, sys, weather} = data;\n\t\t\t\tif(!weather) return;\n\t\t\t\tvar weatherType = weather[0]['main'].toLowerCase();\n\t\t\t\tvar {sunrise, sunset} = sys;\n\t\t\t\tvar now = new Date(); // Unix time since epoche\n\n\t\t\t\t// Set to clear night or clear day (for sun or moon)\n\t\t\t\tif (weatherType === 'clear') {\n\t\t\t\t\tif (now > sunrise && now < sunset) {\n\t\t\t\t\t\tweatherType = 'clearday';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tweatherType = 'clearnight';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Set the weather image\n\t\t\t\tlet imgPath = weatherImg.hazy // catch all: mist, smoke, fog, etc. \n\t\t\t\tif (weatherType in weatherImg) {\n\t\t\t\t\timgPath = weatherImg[weatherType]\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update the state with this data\n\t\t\t\tthis.setState({ \n\t\t\t\t\ttemp: main.temp.toFixed(0),\n\t\t\t\t\timgPath: imgPath,\n\t\t\t\t\tcity: name,\n\t\t\t\t});\n\t\t\t}) \n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst hidden = this.state.temp ? '' : 'hidden'  // Only show once loaded, don't show if there is an error\n\t\treturn (\n\t\t\t<StyledWeather className={hidden}>\n\t\t\t\t<WeatherTop>\n\t\t\t\t\t<WeatherIcon src={this.state.imgPath} />\n\t\t\t\t\t<WeatherTemp className='vertical-center'>{this.state.temp}&deg;</WeatherTemp>\n\t\t\t\t</WeatherTop>\n\t\t\t\t<WeatherBottom>\t\n\t\t\t\t\t{this.state.city}\n\t\t\t\t</WeatherBottom>\n\t\t\t</StyledWeather>\n\t\t);\n\t}\n}\n\nexport default Weather;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledClock = styled.div`\n\twidth: 100%;\n\ttext-align: center;\n\tfont-size: 200px;\n\n\t@media screen and (max-width: ${props => props.theme.smallScreen}px) {\n\t\tfont-size: 100px;\n\t}\n`;\n\nclass Clock extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdatetime: new Date(),\t\n\t\t};\n\n\t\tthis.getTime = this.getTime.bind(this)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(() => this.tick(), 1000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\n\ttick() {\n\t\tthis.setState({\n\t\t\tdatetime: new Date(),\n\t\t});\n\t}\n\n\tgetTime(datetime) {\n\t\tconst timeOptions = {\n\t\t\thour: \"numeric\",\n\t\t\tminute: \"numeric\",\n\t\t}\n\t\tlet time = this.state.datetime.toLocaleTimeString(\"en-US\", timeOptions);\n\t\ttime = time.replace(\"AM\",\"\").replace(\"PM\",\"\")\n\t\treturn time;\n\t}\n\n\trender() {\n\t\tconst time = this.getTime(this.state.datetime);\n\t\treturn (\n\t\t\t<StyledClock>\n\t\t\t\t{time}\n\t\t\t</StyledClock>\n\t\t);\n\t}\n}\n\nexport default Clock;\n","import React from 'react'\nimport styled from 'styled-components'\n\n\nconst StyledDate = styled.div`\n\tdisplay: inline-block;\n\theight: 100%;\n\twidth: 80px;\n\tpadding: 5px;\n\tborder: 2px solid;\n\tborder-radius: 8px;\n\tfont-weight: 200;\n`;\n\nconst Month = styled.div`\n\tfont-size: 28px;\n\ttext-align: center;\n`;\n\nconst Day = styled.div`\n\tfont-size: 30px;\n\ttext-align: center;\n`;\n\n\nclass CalendarPreview extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmonth: null,\n\t\t\tday: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst datetime = new Date();\n\t\tconst day = datetime.getDate();\n\t\tconst monthIndex = datetime.getMonth();\n\t\tconst months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n\t\tconst month = months[monthIndex];\n\t\tthis.setState({\n\t\t\tmonth: month,\n\t\t\tday: day\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<StyledDate>\n\t\t\t\t<Month>{this.state.month}</Month>\n\t\t\t\t<Day>{this.state.day}</Day>\t\n\t\t\t</StyledDate>\n\t\t);\n\t};\n}\n\n\nexport default CalendarPreview;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst GreetingStyle = styled.div`\n\twidth: 100%;\n\ttext-align: center;\n\tfont-size: 50px;\n\n\t@media screen and (max-width: ${props => props.theme.smallScreen}px) {\n\t\tfont-size: 30px;\n\t}\n`;\n\n\nclass Greeting extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttimeOfDay: null\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst datetime = new Date();\n\t\tconst hour = datetime.getHours();\n\t\tlet timeOfDay = 'evening';\n\t\tif (hour >= 5 && hour < 12) {\n\t\t\ttimeOfDay = 'morning';\n\t\t} else if (hour >= 12 && hour <= 17) {\n\t\t\ttimeOfDay = 'afternoon'\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\ttimeOfDay: timeOfDay,\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<GreetingStyle>\n\t\t\t\tGood {this.state.timeOfDay}{this.props.name ? ', ' + this.props.name : ''}.\n\t\t\t</GreetingStyle>\n\t\t);\n\t}\n}\n\nexport default Greeting;\n","import React from 'react'\nimport styled from 'styled-components'\n\n\nconst StyledGasTracker = styled.a`\n\tdisplay: inline-flex;\n\tflex-direction: column;\n\tfont-weight: 200;\n\theight: 100%;\n\tfloat: left;\n\tvertical-align: bottom;\n\tcolor: ${props => props.theme.primaryWhite};\n\ttext-decoration: none;\n`;\n\nconst Title = styled.div`\n\tfont-size: 20px;\n\ttext-align: center;\n\theight: 50%;\n\tdisplay: flex;\n\talign-items: flex-end;\n`;\n\nconst Content = styled.div`\n\tpadding-top: 3px;\n\theight: 50%;\n\tdisplay: flex;\n`;\n\nconst Value = styled.div`\n\tfont-size: 30px;\n\tdisplay: inline-block;\n\theight: 100%;\n\ttext-align: right;\n\tpadding-right: 1px;\n`;\n\nconst Unit = styled.div`\n\tfont-size: 15px;\n\tdisplay: inline-block;\n\theight: 100%;\n\tfloat: right;\n\tpadding-top: 8px;\n\tpadding-left: 1px;\n`;\n\nclass GasTracker extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst url = 'https://www.gasnow.org/api/v3/gas/price?utm_source=dashboard';\n\t\tfetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconst stdGwei = (data.data.standard * 10**(-9)).toFixed(0)\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: stdGwei,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}\n\t\n\trender() {\n\t\tconst hidden = this.state.value ? '' : 'hidden'  // Only show once loaded, don't show if there is an error\n\t\treturn (\n\t\t\t<StyledGasTracker href='https://www.gasnow.org/' className={hidden}>\n\t\t\t\t<Title>Gas Fee</Title>\n\t\t\t\t<Content>\n\t\t\t\t\t<Value>{this.state.value}</Value>\t\n\t\t\t\t\t<Unit>gwei</Unit>\n\t\t\t\t</Content>\n\t\t\t</StyledGasTracker>\n\t\t);\n\t}\n}\n\nexport default GasTracker;\n","import React from 'react'\nimport styled from 'styled-components'\n\n\nconst StyledSearchBar = styled.div`\n\theight: 40px;\n\twidth: 100%;\n\ttext-align: center;\n`;\n\nconst SearchForm = styled.form`\n\tdisplay: inline-block;\n\theight: 100%;\n\tbackground-color: ${props => props.theme.primaryWhite};\n\tborder-radius: 20px;\n\twidth: 350px;\n\topacity: ${props => props.startSearch ? 1 : 0.5};\n\n\n\t@media screen and (max-width: ${props => props.theme.smallScreen}px) {\n\t\twidth: 300px;\n\t}\n`;\n\nconst SearchText = styled.input`\n\tdisplay: inline-block;\n\theight: 100%;\n\twidth: 300px;\n\tfloat: left;\n\tpadding-left: 20px;\n\tborder: none;\n\tfont-size: 15px;\n\tbackground-color: transparent;\n\tbox-sizing: border-box;\n\n\t&:focus {\n\t\toutline: none;\n\t}\n\n\t@media screen and (max-width: ${props => props.theme.smallScreen}px) {\n\t\twidth: 250px;\n\t}\n`;\n\nconst SearchButton = styled.button`\n\tdisplay: inline-block;\t\n\theight: 100%;\n\twidth: 50px;\n\tborder: none;\n\tbackground-color: transparent;\n\tcursor: pointer;\n\n\t& > img {\n\t\theight: 100%;\n\t\twidth: 18px;\n\t}\n`;\n\nclass SearchBar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsearch: '',\n\t\t}\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\t//    \tdocument.getElementById(\"searchBox\").select(); // Make the cursor select the search box on load\n\t}\n\n\thandleChange(event) {\n\t\tthis.setState({\n\t\t\tsearch: event.target.value,\n\t\t});\n\t}\n\n\thandleSubmit(event) {\n\t\twindow.location.href = \"https://www.duckduckgo.com?q=\" + this.state.search;\n\t\tevent.preventDefault()\n\t}\n\n\trender() {\n\t\tconst startSearch = this.state.search === '' ? false : true;\n\t\treturn (\n\t\t\t<StyledSearchBar>\n\t\t\t\t<SearchForm onSubmit={this.handleSubmit} startSearch={startSearch}>\n\t\t\t\t\t<SearchText id='searchBox' type='text' value={this.state.search} onChange={this.handleChange} /> \n\t\t\t\t\t<SearchButton type='submit' onClick={this.handleSubmit}><img src={`${process.env.PUBLIC_URL}/searchIcon.svg`} alt=''/></SearchButton>\n\t\t\t\t</SearchForm>\n\t\t\t</StyledSearchBar>\n\t\t);\n\t}\n}\n\nexport default SearchBar;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledMyLogo = styled.a`\n\tdisplay: flex;\n\theight: 100%;\n\talign-items: flex-end;\n\topacity: 0.3;\n\tfont-size: 50px;\n\ttext-decoration: none;\n\tcolor: ${props => props.theme.primaryWhite};\n\tfont-weight: 300;\n\n\t&:hover {\n\t\topacity: 1;\n\t}\n\n\t@media screen and (max-width: ${props => props.theme.smallScreen}px) {\n\t\tfont-size: 40px;\n\t}\n`;\n\nclass MyLogo extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<StyledMyLogo href='https://www.spencerperkins.me'>[S]</StyledMyLogo>\t\t\t\n\t\t);\n\t}\n}\n\nexport default MyLogo;\n","import React from 'react'\nimport styled from 'styled-components'\nimport Weather from './components/weather'\nimport Clock from './components/clock'\nimport CalendarPreview from './components/calendarPreview'\nimport Greeting from './components/greeting'\nimport GasTracker from './components/gasTracker'\nimport SearchBar from './components/searchBar'\nimport MyLogo from './components/myLogo'\n\nconst outsidePadding = '20px';\n\nconst Dashboard = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tpadding: ${outsidePadding};\n\tcolor: ${props => props.theme.primaryWhite};\n\tbackground-image: ${props => props.imgUrl};\n\tbackground-repeat: no-repeat;\n\tbackground-size: 100% 100%;\n`;\n\nconst Top = styled.div`\n\twidth: 100%;\n\theight: 80px;\n\tposition: relative;\n`;\n\nconst Right = styled.div`\n\tdisplay: inline;\n\tposition: absolute;\n\tright: 0;\n\theight: 100%;\n`;\n\nconst Bottom = styled.div`\n\theight: 80px;\n\tposition: absolute;\n\tbottom: ${outsidePadding};\n\tfont-size: 10px;\n\twidth: calc(100% - 2*${outsidePadding});\n`;\n\nconst Spacer = styled.div`\n \theight: 10%;\n`;\n\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\timgUrl: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst clientId = 'c_Mh-IYia-rRAxpMVjEXew6rcrvySdE3lVI3xnG4Vrk';\n\t\t//const clientId = '9i_xH3I1PGmz4bSd5TjXVViHg7hq2WUz9iVEyq74POA';\n\t\t//const clientId = '0K6ecqqXYKMvm7wJt8GpZ0qA6tpvbkqjNrQ8e6qKpP0';\n\n\t\tvar url = 'https://api.unsplash.com/photos/random/?client_id=' + clientId + '&orientation=landscape&collections=';\n\t\tfetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconst urls = data['urls'];\n\t\t\t\tconst {regular} = urls;\n\t\t\t\tconst url = 'url(' + regular + ')'\n\t\t\t\tthis.setState({\n\t\t\t\t\timgUrl: url,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tconsole.log('Error');\n\t\t\t\tdocument.body.style.backgroundColor = '#474749'; // Set to gray if there is an error\n\t\t\t});\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Dashboard imgUrl={this.state.imgUrl}>\n\t\t\t\t<Top>\n\t\t\t\t\t<CalendarPreview />\n\t\t\t\t\t<Right>\n\t\t\t\t\t\t<Weather weatherImg={this.props.weatherImg} lat={this.props.lat} long={this.props.long}/>\n\t\t\t\t\t</Right>\n\t\t\t\t</Top>\n\t\t\t\t<Spacer />\n\t\t\t\t<SearchBar />\n\t\t\t\t<Spacer />\n\t\t\t\t<Clock />\n\t\t\t\t<Greeting name={this.props.name} />\n\t\t\t\t<Bottom>\n\t\t\t\t\t<GasTracker />\n\t\t\t\t\t<Right>\n\t\t\t\t\t\t<MyLogo />\n\t\t\t\t\t</Right>\n\t\t\t\t</Bottom>\n\t\t\t</Dashboard>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react'\nimport {createGlobalStyle, ThemeProvider} from 'styled-components'\n\nconst theme = (darkMode, color) => ({\n\tprimaryWhite: '#FFFFFF',\t\n\n\t// Media query sizes\n\tmediumScreen: 800, \n\tsmallScreen: 500,\n});\n\n// Everything that is child of theme, gets theme as its props, so it can be used everywhere\nexport default function Theme({children}) {\n\treturn <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nexport const GlobalStyle = createGlobalStyle`\n\thtml {font-family: 'Roboto', sans-serif}\n\n\thtml, body, #root {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tfont-size: 18px;\n\t\tfont-weight: 400;\n\t\toverflow: hidden;\n\t}\n\n\tdiv {\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.hidden {\n\t\topacity: 0;\n\t}\n`;\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport Theme, {GlobalStyle} from './theme'\n\nReactDOM.render(\n\t<>\n\t\t<Theme>\n\t\t\t<GlobalStyle />\n\t\t\t<App long={getUrlParam('long')} lat={getUrlParam('lat')} name={getUrlParam('name')}/>\n\t\t</Theme>\n\t</>,\n\tdocument.getElementById('root')\n);\n\n// Helpers\nfunction getUrlParam(paramName) {\n    var pageUrl = window.location.search.substring(1);\n    var urlVars = pageUrl.split('&');\n    for (var i = 0; i < urlVars.length; i++) {\n        var name = urlVars[i].split('=');\n        if (name[0] === paramName) {\n            return name[1];\n        }\n    }\n}\n"],"sourceRoot":""}