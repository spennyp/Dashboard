{"version":3,"sources":["components/weather.js","components/clock.js","components/calendarPreview.js","components/greeting.js","components/gasTracker.js","components/searchBar.js","components/myLogo.js","app.js","theme.js","index.js"],"names":["WEATHER_IMG","default","weatherImgBase","thunderstorm","drizzle","rain","snow","clouds","clearnight","clearday","hazy","StyledWeather","styled","div","WeatherTop","WeatherIcon","img","WeatherTemp","WeatherBottom","Weather","lat","long","useState","temp","setTemp","city","setCity","imgPath","setImgPath","useEffect","weatherImg","url","fetch","then","response","json","data","main","name","sys","weather","weatherType","toLowerCase","sunrise","sunset","now","Date","newImgPath","toFixed","catch","error","console","log","hidden","className","src","StyledClock","props","theme","smallScreen","Clock","datetime","setDatetime","timerRef","useRef","current","setInterval","clearInterval","time","toLocaleTimeString","hour","minute","replace","formatTime","StyledDate","Month","Day","CalendarPreview","month","setMonth","day","setDay","getDate","monthIndex","getMonth","GreetingStyle","Greeting","timeOfDay","setTimeOfDay","getHours","StyledGasTracker","a","primaryWhite","Title","Content","Value","Unit","GasTracker","gasPrice","setGasPrice","stdGwei","standard","href","StyledSearchBar","SearchForm","form","startSearch","SearchText","input","SearchButton","button","SearchBar","search","setSearch","handleSubmit","event","window","location","preventDefault","document","getElementById","select","onSubmit","id","type","value","onChange","target","onClick","alt","StyledMyLogo","MyLogo","outsidePadding","Dashboard","imgUrl","Top","Right","Bottom","Spacer","App","state","regular","setState","body","style","backgroundColor","this","React","Component","darkMode","color","mediumScreen","Theme","children","GlobalStyle","createGlobalStyle","getUrlParam","paramName","urlVars","substring","split","i","length","ReactDOM","render"],"mappings":"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","file":"static/js/main.174b5e6a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\n// Data\nconst weatherImgBase = 'weather/'\nconst WEATHER_IMG = {\n\tdefault: weatherImgBase + 'default.svg',\n\tthunderstorm: weatherImgBase + 'thunderstorm.svg',\n\tdrizzle: weatherImgBase + 'drizzle.svg',\n\train: weatherImgBase + 'rain.svg',\n\tsnow: weatherImgBase + 'snow.svg',\n\tclouds: weatherImgBase + 'clouds.svg',\n\tclearnight: weatherImgBase + 'clearnight.svg',\n\tclearday: weatherImgBase + 'clearday.svg',\n\thazy: weatherImgBase + 'hazy.svg',\n};\n\n\n// Style\nconst StyledWeather = styled.div`\n\theight: 100%;\n\tdisplay: inline-block;\n\tfont-weight: 200;\n`;\n\nconst WeatherTop = styled.div`\n\theight: 70%;\n`;\n\nconst WeatherIcon = styled.img`\n\theight:100%;\n\theight: 100%;\n\tfloat: left;\n`;\n\nconst WeatherTemp = styled.div`\n\theight: 100%;\n\tfloat: right;\n\tfont-size: 35px;\n\tpadding-top: 8px;\n`;\n\nconst WeatherBottom = styled.div`\n\theight: 30%;\n\ttext-align: center;\n\tfont-size: 20px;\n`;\n\n\nexport default function Weather({lat, long}) {\n\tconst [temp, setTemp] = useState();\n\tconst [city, setCity] = useState();\n\tconst [imgPath, setImgPath] = useState();\n\n\tuseEffect(() => {\n\t\tconst apiKey = 'a68f7eba17ff810319e0698eb480852e'; // Shouldn't really be here\n\t\tconst weatherImg = WEATHER_IMG;\n\t\t\n\t\tvar url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${apiKey}&units=metric`;\n\n\t\tfetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconst {main, name, sys, weather} = data;\n\t\t\t\tif(!weather) return;\n\t\t\t\tvar weatherType = weather[0]['main'].toLowerCase();\n\t\t\t\tvar {sunrise, sunset} = sys;\n\t\t\t\tvar now = new Date(); // Unix time since epoche\n\n\t\t\t\t// Set to clear night or clear day (for sun or moon)\n\t\t\t\tif (weatherType === 'clear') {\n\t\t\t\t\tif (now > sunrise && now < sunset) {\n\t\t\t\t\t\tweatherType = 'clearday';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tweatherType = 'clearnight';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Set the weather image\n\t\t\t\tlet newImgPath = weatherImg.hazy // catch all: mist, smoke, fog, etc. \n\t\t\t\tif (weatherType in weatherImg) {\n\t\t\t\t\tnewImgPath = weatherImg[weatherType]\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update state\n\t\t\t\tsetTemp(main.temp.toFixed(0));\n\t\t\t\tsetImgPath(newImgPath);\n\t\t\t\tsetCity(name);\n\t\t\t}) \n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}, [lat, long]);\n\n\n\tconst hidden = temp ? '' : 'hidden'  // Only show once loaded, don't show if there is an error\n\t\n\treturn (\n\t\t<StyledWeather className={hidden}>\n\t\t\t<WeatherTop>\n\t\t\t\t<WeatherIcon src={imgPath} />\n\t\t\t\t<WeatherTemp className='vertical-center'>{temp}&deg;</WeatherTemp>\n\t\t\t</WeatherTop>\n\t\t\t<WeatherBottom>\t\n\t\t\t\t{city}\n\t\t\t</WeatherBottom>\n\t\t</StyledWeather>\n\t);\n}\n\n","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\n\nconst StyledClock = styled.div`\n\twidth: 100%;\n\ttext-align: center;\n\tfont-size: 200px;\n\n\t@media screen and (max-width: ${props => props.theme.smallScreen}px) {\n\t\tfont-size: 100px;\n\t}\n`;\n\nconst msRefreshRate = 1000; // Every 1sec\n\nfunction formatTime(datetime) {\n\tconst timeOptions = {\n\t\thour: \"numeric\",\n\t\tminute: \"numeric\",\n\t}\n\n\tlet time = datetime.toLocaleTimeString(\"en-US\", timeOptions);\n\ttime = time.replace(\"AM\",\"\").replace(\"PM\",\"\");\n\n\treturn time;\n}\n\n\nexport default function Clock() {\n\tconst [datetime, setDatetime] = useState(new Date());\t\n\tconst timerRef = useRef();\n\n\t// Executed upon mounting\n\tuseEffect(() => {\n\t\ttimerRef.current = setInterval(() => setDatetime(new Date()), msRefreshRate);\n\n\t\t// clean up function\n\t\treturn () => { \t\t\t\n\t\t\tclearInterval(timerRef.current);\n\t\t}\n\t}, [timerRef, setDatetime]);\n\t\n\tconst time = formatTime(datetime);\n\treturn (\n\t\t<StyledClock>\n\t\t\t{time}\n\t\t</StyledClock>\n\t);\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\n\nconst StyledDate = styled.div`\n\tdisplay: inline-block;\n\theight: 100%;\n\twidth: 80px;\n\tpadding: 5px;\n\tborder: 2px solid;\n\tborder-radius: 8px;\n\tfont-weight: 200;\n`;\n\nconst Month = styled.div`\n\tfont-size: 28px;\n\ttext-align: center;\n`;\n\nconst Day = styled.div`\n\tfont-size: 30px;\n\ttext-align: center;\n`;\n\n\nexport default function CalendarPreview() {\n\tconst [month, setMonth] = useState(null);\n\tconst [day, setDay] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst datetime = new Date();\n\t\tconst day = datetime.getDate();\n\t\tconst monthIndex = datetime.getMonth();\n\t\tconst months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n\t\tconst month = months[monthIndex];\n\t\tsetMonth(month);\n\t\tsetDay(day);\n\t}, []);\n\n\treturn (\n\t\t<StyledDate>\n\t\t\t<Month>{month}</Month>\n\t\t\t<Day>{day}</Day>\t\n\t\t</StyledDate>\n\t);\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nconst GreetingStyle = styled.div`\n\twidth: 100%;\n\ttext-align: center;\n\tfont-size: 50px;\n\n\t@media screen and (max-width: ${props => props.theme.smallScreen}px) {\n\t\tfont-size: 30px;\n\t}\n`;\n\nexport default function Greeting({name}) {\n\tconst [timeOfDay, setTimeOfDay] = useState();\n\n\tuseEffect(() => {\n\t\tconst datetime = new Date();\n\t\tconst hour = datetime.getHours();\n\t\tlet timeOfDay = 'evening';\n\t\tif (hour >= 5 && hour < 12) {\n\t\t\ttimeOfDay = 'morning';\n\t\t} else if (hour >= 12 && hour <= 17) {\n\t\t\ttimeOfDay = 'afternoon'\n\t\t}\n\n\t\tsetTimeOfDay(timeOfDay);\n\t}, [name]);\n\n\treturn (\n\t\t<GreetingStyle>\n\t\t\tGood {timeOfDay}{name ? ', ' + name : ''}.\n\t\t</GreetingStyle>\n\t);\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\n\nconst StyledGasTracker = styled.a`\n\tdisplay: inline-flex;\n\tflex-direction: column;\n\tfont-weight: 200;\n\theight: 100%;\n\tfloat: left;\n\tvertical-align: bottom;\n\tcolor: ${props => props.theme.primaryWhite};\n\ttext-decoration: none;\n`;\n\nconst Title = styled.div`\n\tfont-size: 20px;\n\ttext-align: center;\n\theight: 50%;\n\tdisplay: flex;\n\talign-items: flex-end;\n`;\n\nconst Content = styled.div`\n\tpadding-top: 3px;\n\theight: 50%;\n\tdisplay: flex;\n`;\n\nconst Value = styled.div`\n\tfont-size: 30px;\n\tdisplay: inline-block;\n\theight: 100%;\n\ttext-align: right;\n\tpadding-right: 1px;\n`;\n\nconst Unit = styled.div`\n\tfont-size: 15px;\n\tdisplay: inline-block;\n\theight: 100%;\n\tfloat: right;\n\tpadding-top: 8px;\n\tpadding-left: 1px;\n`;\n\nexport default function GasTracker() {\n\tconst [gasPrice, setGasPrice] = useState(null);\t\n\t\n\t// Get the gas price, runs on mount only\n\tuseEffect(() => {\n\t\tconst url = 'https://www.gasnow.org/api/v3/gas/price?utm_source=dashboard';\n\t\tfetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconst stdGwei = (data.data.standard * 10**(-9)).toFixed(0)\n\t\t\t\tsetGasPrice(stdGwei);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}, []);\n\n\tconst hidden = gasPrice ? '' : 'hidden'  // Only show once loaded, don't show if there is an error\n\treturn (\n\t\t<StyledGasTracker href='https://www.gasnow.org/' className={hidden}>\n\t\t\t<Title>Gas Fee</Title>\n\t\t\t<Content>\n\t\t\t\t<Value>{gasPrice}</Value>\t\n\t\t\t\t<Unit>gwei</Unit>\n\t\t\t</Content>\n\t\t</StyledGasTracker>\n\t);\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nconst searchIconPath = '../assets/searchIcon.svg'\n\nconst StyledSearchBar = styled.div`\n\theight: 40px;\n\twidth: 100%;\n\ttext-align: center;\n`;\n\nconst SearchForm = styled.form`\n\tdisplay: inline-block;\n\theight: 100%;\n\tbackground-color: ${props => props.theme.primaryWhite};\n\tborder-radius: 20px;\n\twidth: 350px;\n\topacity: ${props => props.startSearch ? 1 : 0.5};\n\n\n\t@media screen and (max-width: ${props => props.theme.smallScreen}px) {\n\t\twidth: 300px;\n\t}\n`;\n\nconst SearchText = styled.input`\n\tdisplay: inline-block;\n\theight: 100%;\n\twidth: 300px;\n\tfloat: left;\n\tpadding-left: 20px;\n\tborder: none;\n\tfont-size: 15px;\n\tbackground-color: transparent;\n\tbox-sizing: border-box;\n\n\t&:focus {\n\t\toutline: none;\n\t}\n\n\t@media screen and (max-width: ${props => props.theme.smallScreen}px) {\n\t\twidth: 250px;\n\t}\n`;\n\nconst SearchButton = styled.button`\n\tdisplay: inline-block;\t\n\theight: 100%;\n\twidth: 50px;\n\tborder: none;\n\tbackground-color: transparent;\n\tcursor: pointer;\n\n\t& > img {\n\t\theight: 100%;\n\t\twidth: 18px;\n\t}\n`;\n\nexport default function SearchBar() {\n\tconst [search, setSearch] = useState('');\n\n\t// On load, make cursor select search box\n\tuseEffect(() => {\n    \tdocument.getElementById(\"searchBox\").select(); // Make the cursor select the search box on load\n\t}, []);\n\n\tfunction handleSubmit(event) {\n\t\twindow.location.href = \"https://www.duckduckgo.com?q=\" + search;\n\t\tevent.preventDefault()\n\t}\n\n\tfunction handleChange(event) {\n\t\tsetSearch(event.target.value);\n\t}\n\n\tconst startSearch = search === '' ? false : true;\n\treturn (\n\t\t<StyledSearchBar>\n\t\t\t<SearchForm onSubmit={handleSubmit} startSearch={startSearch}>\n\t\t\t\t<SearchText id='searchBox' type='text' value={search} onChange={handleChange} /> \n\t\t\t\t<SearchButton type='submit' onClick={handleSubmit}><img src={searchIconPath} alt=''/></SearchButton>\n\t\t\t</SearchForm>\n\t\t</StyledSearchBar>\n\t);\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledMyLogo = styled.a`\n\tdisplay: flex;\n\theight: 100%;\n\talign-items: flex-end;\n\topacity: 0.3;\n\tfont-size: 50px;\n\ttext-decoration: none;\n\tcolor: ${props => props.theme.primaryWhite};\n\tfont-weight: 300;\n\n\t&:hover {\n\t\topacity: 1;\n\t}\n\n\t@media screen and (max-width: ${props => props.theme.smallScreen}px) {\n\t\tfont-size: 40px;\n\t}\n`;\n\nexport default function MyLogo() {\n\treturn (\n\t\t<StyledMyLogo href='https://www.spencerperkins.me'>[S]</StyledMyLogo>\t\t\t\n\t);\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Weather from './components/weather'\nimport Clock from './components/clock'\nimport CalendarPreview from './components/calendarPreview'\nimport Greeting from './components/greeting'\nimport GasTracker from './components/gasTracker'\nimport SearchBar from './components/searchBar'\nimport MyLogo from './components/myLogo'\n\nconst outsidePadding = '20px';\n\nconst Dashboard = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tpadding: ${outsidePadding};\n\tcolor: ${props => props.theme.primaryWhite};\n\tbackground-image: ${props => props.imgUrl};\n\tbackground-repeat: no-repeat;\n\tbackground-size: 100% 100%;\n`;\n\nconst Top = styled.div`\n\twidth: 100%;\n\theight: 80px;\n\tposition: relative;\n`;\n\nconst Right = styled.div`\n\tdisplay: inline;\n\tposition: absolute;\n\tright: 0;\n\theight: 100%;\n`;\n\nconst Bottom = styled.div`\n\theight: 80px;\n\tposition: absolute;\n\tbottom: ${outsidePadding};\n\tfont-size: 10px;\n\twidth: calc(100% - 2*${outsidePadding});\n`;\n\nconst Spacer = styled.div`\n \theight: 10%;\n`;\n\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\timgUrl: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst clientId = 'c_Mh-IYia-rRAxpMVjEXew6rcrvySdE3lVI3xnG4Vrk';\n\t\t//const clientId = '9i_xH3I1PGmz4bSd5TjXVViHg7hq2WUz9iVEyq74POA';\n\t\t//const clientId = '0K6ecqqXYKMvm7wJt8GpZ0qA6tpvbkqjNrQ8e6qKpP0';\n\n\t\tvar url = 'https://api.unsplash.com/photos/random/?client_id=' + clientId + '&orientation=landscape&collections=';\n\t\tfetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconst urls = data['urls'];\n\t\t\t\tconst {regular} = urls;\n\t\t\t\tconst url = 'url(' + regular + ')'\n\t\t\t\tthis.setState({\n\t\t\t\t\timgUrl: url,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tconsole.log('Error');\n\t\t\t\tdocument.body.style.backgroundColor = '#474749'; // Set to gray if there is an error\n\t\t\t});\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Dashboard imgUrl={this.state.imgUrl}>\n\t\t\t\t<Top>\n\t\t\t\t\t<CalendarPreview />\n\t\t\t\t\t<Right>\n\t\t\t\t\t\t<Weather lat={this.props.lat} long={this.props.long}/>\n\t\t\t\t\t</Right>\n\t\t\t\t</Top>\n\t\t\t\t<Spacer />\n\t\t\t\t<SearchBar />\n\t\t\t\t<Spacer />\n\t\t\t\t<Clock />\n\t\t\t\t<Greeting name={this.props.name} />\n\t\t\t\t<Bottom>\n\t\t\t\t\t<GasTracker />\n\t\t\t\t\t<Right>\n\t\t\t\t\t\t<MyLogo />\n\t\t\t\t\t</Right>\n\t\t\t\t</Bottom>\n\t\t\t</Dashboard>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react'\nimport {createGlobalStyle, ThemeProvider} from 'styled-components'\n\nconst theme = (darkMode, color) => ({\n\tprimaryWhite: '#FFFFFF',\t\n\n\t// Media query sizes\n\tmediumScreen: 800, \n\tsmallScreen: 500,\n});\n\n// Everything that is child of theme, gets theme as its props, so it can be used everywhere\nexport default function Theme({children}) {\n\treturn <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nexport const GlobalStyle = createGlobalStyle`\n\thtml {font-family: 'Roboto', sans-serif}\n\n\thtml, body, #root {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tfont-size: 18px;\n\t\tfont-weight: 400;\n\t\toverflow: hidden;\n\t}\n\n\tdiv {\n\t\tbox-sizing: border-box;\n\t}\n\t\n\t.hidden {\n\t\topacity: 0;\n\t}\n`;\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport Theme, {GlobalStyle} from './theme'\n\nReactDOM.render(\n\t<>\n\t\t<Theme>\n\t\t\t<GlobalStyle />\n\t\t\t<App long={getUrlParam('long')} lat={getUrlParam('lat')} name={getUrlParam('name')}/>\n\t\t</Theme>\n\t</>,\n\tdocument.getElementById('root')\n);\n\n// Helpers\nfunction getUrlParam(paramName) {\n    var pageUrl = window.location.search.substring(1);\n    var urlVars = pageUrl.split('&');\n    for (var i = 0; i < urlVars.length; i++) {\n        var name = urlVars[i].split('=');\n        if (name[0] === paramName) {\n            return name[1];\n        }\n    }\n}\n"],"sourceRoot":""}